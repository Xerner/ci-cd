# ********************************************************************************
#  Copyright (c) 2025 Contributors to the Eclipse Foundation
#
#  See the NOTICE file(s) distributed with this work for additional
#  information regarding copyright ownership.
#
#  This program and the accompanying materials are made available under the
#  terms of the Apache License Version 2.0 which is available at
#  https://www.apache.org/licenses/LICENSE-2.0
#
#  SPDX-License-Identifier: Apache-2.0
# *******************************************************************************

name: Update Spec Compliance Badge

on:
  workflow_call:
    secrets:
      UP_SPEC_COMPLIANCE_GIST_TOKEN:
        required: true

jobs:
  update-spec-compliance-badge:
    name: update spec compliance badge
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
     
      - name: Get current spec version
        id: current-spec-version
        run: |
          UP_SPEC_COMMIT=$(git ls-tree HEAD up-spec | awk '{print $3}')
          echo "Up-spec submodule is at commit: $UP_SPEC_COMMIT"
          cd up-spec
          git fetch --tags
          CURRENT_UP_SPEC_VERSION=$(git describe --tags --exact-match)
          if [ -z "$CURRENT_UP_SPEC_VERSION" ]; then
            echo "No tag found at up-spec commit $UP_SPEC_COMMIT, using nearest tagged commit hash"
            CURRENT_UP_SPEC_VERSION=$(git rev-parse --short HEAD)
            NEAREST_UP_SPEC_VERSION=$(git describe --tags --abbrev=0)
            CURRENT_UP_SPEC_VERSION=$CURRENT_UP_SPEC_VERSION.$NEAREST_UP_SPEC_VERSION
            echo "nearest tag and its commit hash: $CURRENT_UP_SPEC_VERSION"
            echo "current_up_spec_version=$CURRENT_UP_SPEC_VERSION" >> $GITHUB_OUTPUT
          else
            echo "Current commit is tagged as: $CURRENT_UP_SPEC_VERSION"
            echo "current_up_spec_version=$CURRENT_UP_SPEC_VERSION" >> $GITHUB_OUTPUT
          fi

      - name: Get latest spec version
        id: latest-spec-version
        run: |
          cd up-spec
          git fetch --tags
          LATEST_UP_SPEC_VERSION=$(git ls-remote --tags origin | grep -v '\^{}' | grep -E 'refs/tags/v?[0-9]+\.[0-9]+' | sort -V -k2 | tail -1 | cut -d'/' -f3)
          if [ -n "$LATEST_UP_SPEC_VERSION" ]; then
            echo "Found latest up-spec tag: $LATEST_UP_SPEC_VERSION"
          else
            # Fallback to main branch if no tags found
            LATEST_UP_SPEC_VERSION=$(git ls-remote origin main | cut -f1 | cut -c1-7)
            echo "No tags found, using main branch commit: $LATEST_UP_SPEC_VERSION"
          fi
          echo "latest_up_spec_version=$LATEST_UP_SPEC_VERSION" >> $GITHUB_OUTPUT

      - name: Is current spec version latest?
        id: is-latest
        run: |
          if [ "${{ steps.current-spec-version.outputs.current_up_spec_version }}" = "${{ steps.latest-spec-version.outputs.latest_up_spec_version }}" ]; then
            echo "Current spec version is the latest."
            echo "is_latest=true" >> $GITHUB_OUTPUT
          else
            echo "Current spec version is not the latest."
            echo "is_latest=false" >> $GITHUB_OUTPUT
          fi

      - name: Update spec compliance badge gist
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.UP_SPEC_COMPLIANCE_GIST_TOKEN }}
          gistID: 80759847e7bd262515184cb28f588a09
          filename: spec-compliance-badge.json
          label: up-spec
          message: ${{ steps.current-spec-version.outputs.current_up_spec_version }}
          color: ${{ steps.is-latest.outputs.is_latest == 'true' && 'brightgreen' || 'red' }}
